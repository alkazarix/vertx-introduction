{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "talans labs questions",
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:9000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/questions": {
      "get": {
        "summary": "list question",
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "limit",
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "pagination",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "create a question",
        "tags": [
          "questions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "question",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Expected response to a valid request"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/questions/{questionid}": {
      "get": {
        "summary": "get question by id",
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "questionid",
            "in": "path",
            "required": true,
            "description": "question id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "missing ressource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "get question by id",
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "questionid",
            "in": "path",
            "required": true,
            "description": "question id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Expected response to a valid request"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "timestamp": {
          "type": "number"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    }
  }
}