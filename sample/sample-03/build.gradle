plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id "io.dotinc.vertx-codegen-plugin" version "0.1.0"
}

group = 'com.talanlabs'
version = '1.0.0'

sourceSets {
  generated{
    java.srcDir "${projectDir}/src/generated/java"
  }
  main{
    java.srcDir "${projectDir}/src/main/java"
  }
}


repositories {
  mavenCentral()
}

ext {
  vertxVersion = '3.8.5'
  junitJupiterEngineVersion = '5.4.0'
  mockitoVersion = '1.9.5'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}
codeGen {
  vertxVersion = "$vertxVersion" // (2)
  generatedDirs = "src/main/generated"
  generationPath = "proxy"
}
sourceCompatibility = '1.8'

def mainVerticleName = 'com.talanlabs.sample03.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  compile "io.vertx:vertx-config:$vertxVersion"
  compile "io.vertx:vertx-web:$vertxVersion"
  compile "io.vertx:vertx-web-api-service:$vertxVersion"
  compile "io.vertx:vertx-service-proxy:$vertxVersion" //NEW Vertx Proxy code
  compile  "io.vertx:vertx-codegen:$vertxVersion"
  compile "io.vertx:vertx-jdbc-client:$vertxVersion"
  compile "io.vertx:vertx-web-client:$vertxVersion"

  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.10'
  compile group: 'black.door', name: 'hate', version: 'v1r4t5'
  compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

  annotationProcessor "io.vertx:vertx-codegen:$vertxVersion:processor"

  testImplementation "org.hsqldb:hsqldb:2.5.0"
  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
  testImplementation  "org.mockito:mockito-all:$mockitoVersion"
}


task generateProxies(type: JavaCompile, group: 'build',
        description: 'Generates the Vertx proxies') {
  source = sourceSets.main.java // input source set
  classpath = configurations.compile + configurations.compileOnly + configurations.annotationProcessor
  destinationDir = file("${projectDir}/src/main/generated")
  options.annotationProcessorPath = configurations.annotationProcessor
  options.compilerArgs = [
          "-proc:none",
          "-processor", "io.vertx.codegen.CodeGenProcessor", // vertx processor here
          "-AoutputDirectory=${projectDir}/src/main"
  ]
}

compileJava {
  dependsOn(generateProxies)
  source += sourceSets.generated.java
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName,
          "--redeploy=$watchForChange",
          "--launcher-class=$mainClassName",
          "--on-redeploy=$doOnChange",
          "--java-opts", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000"]
}

clean {
  delete codeGen.generatedDirs
}